AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Power Dialer for Amazon Connect Application.

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Runtime: python3.9
    ReservedConcurrentExecutions: 5
Parameters:
  ConnectInstanceId:
    Type: String
    Description: Amazon Connect Instance ID to use for the outbound call
  ConnectContactFlowId:
    Type: String
    Description: Amazon Connect Contact Flow ID to use for the outbound call
  ConnectQueueId:
    Type: String
    Description: Amazon Connect Queue ID to use for the outbound call
  CountryCode:
    Type: String
    Description: Country code of destination country
  ISOCountryCode:
    Type: String
    Description: 2 letter code for country code
    

Resources:
  dialinglistbucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['dialer-input-bucket', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
    DeletionPolicy: Delete
  
  resultsbucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['dialer-output-bucket', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
    DeletionPolicy: Delete
    
  dialList: 
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "seqID"
          AttributeType: "N"

      KeySchema: 
        - 
          AttributeName: "seqID"
          KeyType: "HASH"

      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: True
      SSESpecification:
        SSEEnabled: True

  ActiveDialing:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "contactId"
          AttributeType: "S"

      KeySchema: 
        - 
          AttributeName: "contactId"
          KeyType: "HASH"

      BillingMode: "PAY_PER_REQUEST"
      
      PointInTimeRecoverySpecification: 
        PointInTimeRecoveryEnabled: True
      SSESpecification:
        SSEEnabled: True
  
  ControlSFRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Policies:
        -
          PolicyName: LogAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogDelivery'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                Resource:
                  - '*'

        -
          PolicyName: ConfigTableAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                  - 'dynamodb:UpdateItem'
                Resource:
                  - !GetAtt ActiveDialing.Arn
                  - !GetAtt dialList.Arn      
        -
          PolicyName: ControlStateMachine
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - states:DescribeExecution
                  - states:StartExecution
                  - states:StopExecution
                Resource: !GetAtt DialThreadSF.Arn
              -
                Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForStepFunctionsExecutionRule
              -
                Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt dial.Arn
                  - !GetAtt getAvailAgents.Arn
                  - !GetAtt getConfig.Arn
                  - !GetAtt getContacts.Arn
                  - !GetAtt ListLoad.Arn
                  - !GetAtt SaveResults.Arn
        -
          PolicyName: ParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'ssm:GetParametersByPath'
                  - 'ssm:GetParameter'
                  - 'ssm:PutParameter'
                Resource:
                  - '*'
  
  ThreadSFRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        -
          PolicyName: ConfigTableAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                  - 'dynamodb:UpdateItem'
                Resource:
                  - !GetAtt ActiveDialing.Arn
                  - !GetAtt dialList.Arn      
        -
          PolicyName: InvokeLambdaFunctions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt dial.Arn
                  - !GetAtt getAvailAgents.Arn
                  - !GetAtt getConfig.Arn
                  - !GetAtt getContacts.Arn
                  - !GetAtt ListLoad.Arn
                  - !GetAtt SaveResults.Arn
        -
          PolicyName: ParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'ssm:GetParametersByPath'
                  - 'ssm:GetParameter'
                  - 'ssm:PutParameter'
                Resource:
                  - '*'
  
  PowerDialerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole
      Policies:
        -
          PolicyName: BucketAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource:
                  - !Sub 
                    - 'arn:aws:s3:::${dialingListBucket}'
                    - dialingListBucket: !Join ['-', ['dialer-input-bucket', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
                  - !Sub 
                    - 'arn:aws:s3:::${dialingListBucket}/*'
                    - dialingListBucket: !Join ['-', ['dialer-input-bucket', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
                  - !Sub 
                    - 'arn:aws:s3:::${resultsbucket}'
                    - dialingListBucket: !Join ['-', ['dialer-output-bucket', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
                  - !Sub 
                    - 'arn:aws:s3:::${resultsbucket}/*'
                    - dialingListBucket: !Join ['-', ['dialer-output-bucket', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]

        -
          PolicyName: ControlStateMachine
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - states:DescribeExecution
                  - states:StartExecution
                  - states:StopExecution
                Resource:                   
                  - !Sub 
                    - 'arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${DialerControlName}'
                    - DialerControlName: !Join ['-', ['DialerControlSF', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]

        -
          PolicyName: ConfigTableAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                  - 'dynamodb:UpdateItem'
                Resource:
                  - !GetAtt ActiveDialing.Arn
                  - !GetAtt dialList.Arn

        -
          PolicyName: SendTaskToken
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'states:SendTaskSuccess'
                  - 'states:SendTaskFailure'
                  - 'states:SendTaskHeartbeat'
                Resource:
                  - '*'
        -
          PolicyName: InitiateVoiceContact
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'connect:StartOutboundVoiceContact'
                Resource:
                  - '*'
        -
          PolicyName: getCurrentMetricData
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'connect:GetCurrentMetricData'
                Resource:
                  - '*'


        -
          PolicyName: ParameterAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'ssm:GetParametersByPath'
                  - 'ssm:GetParameter'
                  - 'ssm:PutParameter'
                Resource:
                  - '*'
        -
          PolicyName: TableInitialize
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 'events:PutRule'
                  - 'events:DeleteRule'
                  - 'events:PutTargets'
                  - 'events:RemoveTargets'
                Resource:
                  - '*'
        -
          PolicyName: EncryptionAcess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'kms:Decrypt'
                  - 'kms:GenerateDataKey'
                Resource:
                  - '*'
        -
          PolicyName: DataMovement
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'firehose:*'
                  - 'kinesis:*'
                  - 'sqs:*'
                Resource:
                  - '*'
        -
          PolicyName: PinpointAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - 'mobiletargeting:GetVoiceTemplate'
                  - 'mobiletargeting:GetCampaign'
                  - 'mobiletargeting:GetSegment'
                  - 'mobiletargeting:PhoneNumberValidate'
                Resource:
                  - '*'
  CampaignLauncherRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        -
          PolicyName: ControlStateMachine
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - states:DescribeExecution
                  - states:StartExecution
                  - states:StopExecution
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForStepFunctionsExecutionRule
  KinesisFirehoseDeliveryRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - firehose.amazonaws.com
              - s3.amazonaws.com
            Action: sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: deliveryToS3
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
              - Sid: deliveryToS3
                Effect: Allow
                Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:PutObject
                Resource: "*"

  DialThreadSF:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Join ['-', ['DialerThreadSF', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      DefinitionUri: statemachine/PowerDialer-dialthread.asl.json
      Role: !GetAtt ThreadSFRole.Arn
      DefinitionSubstitutions:
        PowerDialerdialArn: !GetAtt dial.Arn
        PowerDialergetAvailAgentsArn: !GetAtt getAvailAgents.Arn
        PowerDialergetConfigArn: !GetAtt getConfig.Arn
        PowerDialergetContactsArn: !GetAtt getContacts.Arn
        PowerDialerListLoadArn: !GetAtt ListLoad.Arn
        PowerDialerSaveResultsArn: !GetAtt SaveResults.Arn
        ParameterIndex: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'dialIndex']]
        ParameterTotalRecords: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'totalRecords']]
        ParameterActiveDialing: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'table-activedialing']]
        ParameterDialingList: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'table-dialerlist']]
        ParameterDialerStatus: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'activeDialer']]

  DialerControlSF:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Join ['-', ['DialerControlSF', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      Role: !GetAtt ControlSFRole.Arn
      DefinitionUri: statemachine/PowerDialer-control.asl.json
      DefinitionSubstitutions:
        PowerDialerdialArn: !GetAtt dial.Arn
        PowerDialergetAvailAgentsArn: !GetAtt getAvailAgents.Arn
        PowerDialergetConfigArn: !GetAtt getConfig.Arn
        PowerDialergetContactsArn: !GetAtt getContacts.Arn
        PowerDialerListLoadArn: !GetAtt ListLoad.Arn
        PowerDialerSaveResultsArn: !GetAtt SaveResults.Arn
        PowerDialerdialthreadArn: !GetAtt DialThreadSF.Arn
        ParameterIndex: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'dialIndex']]
        ParameterTotalRecords: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'totalRecords']]
        ParameterActiveDialing: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'table-activedialing']]
        ParameterDialingList: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'table-dialerlist']]
        ParameterDialerStatus: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'activeDialer']]
        
  ResultsFirehose:
    Type: 'AWS::KinesisFirehose::DeliveryStream'
    Properties:
      DeliveryStreamType: DirectPut
      DeliveryStreamName: !Join ['-', ['dialer-results', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      S3DestinationConfiguration:
        BucketARN: !GetAtt resultsbucket.Arn
        BufferingHints:
          IntervalInSeconds: '60'
          SizeInMBs: '10'
        CompressionFormat: UNCOMPRESSED
        RoleARN: !GetAtt 
          - KinesisFirehoseDeliveryRole
          - Arn

  DialingListQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join ['-', ['dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      VisibilityTimeout: 30
      DelaySeconds: 0
      MessageRetentionPeriod: 86400
    
  PowerDialer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: PowerDialer-layer/
      CompatibleRuntimes:
        - python3.9
        - python3.10
        - python3.11
    Metadata:
      BuildMethod: python3.9


  dial:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-dial/
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          RESULTS_FIREHOSE_NAME: !Ref ResultsFirehose
      
  getAvailAgents:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-getAvailAgents/
      Handler: lambda_function.lambda_handler
  
  getConfig:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-getConfig/
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]

  getContacts:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-getContacts/
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          SQS_URL: !Ref DialingListQueue

  queueContacts:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-queueContacts/
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          SQS_URL: !Ref DialingListQueue
          SFN_ARN: !Ref DialerControlSF
          
  pinpointLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties: 
        Action: 'lambda:InvokeFunction'
        FunctionName: !Ref queueContacts
        Principal: !Sub pinpoint.${AWS::Region}.amazonaws.com
        SourceArn: !Sub arn:aws:mobiletargeting:${AWS::Region}:${AWS::AccountId}:apps/*


  ListLoad:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-ListLoad/
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Timeout: 600
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          SQS_URL: !Ref DialingListQueue
      Events:
        LoadFileEvent:
          Type: S3
          Properties:
            Bucket: !Ref dialinglistbucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: ".csv"    

  contactSource:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'contact-source']]
      Type: String
      Value: 's3'
  
  
  parameterIndex:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'dialIndex']]
      Type: String
      Value: '0'
  
  parameterDialerStatus:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'activeDialer']]
      Type: String
      Value: 'False'  

  parameterTotalRecords:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'totalRecords']]
      Type: String
      Value: '0'
  
  parameterActiveDialing:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'table-activedialing']]
      Type: String
      Value: !Ref ActiveDialing

  parameterDialingList:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'table-dialerlist']]
      Type: String
      Value: !Ref dialList

  parameterContactFlow:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'contactflow']]
      Type: String
      Value: !Ref ConnectContactFlowId

  parameterOutputBucket:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'ResultsBucket']]
      Type: String
      Value: !Ref resultsbucket
      
  parameterConnectId:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'connectid']]
      Type: String
      Value: !Ref ConnectInstanceId
  parameterQueue:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'queue']]
      Type: String
      Value: !Ref ConnectQueueId
  parameterCountryCode:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'countrycode']]
      Type: String
      Value: !Ref CountryCode
  parameterISOCountryCode:
    Type: AWS::SSM::Parameter
    Properties: 
      Name: !Join ['/', ['/connect/dialer', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]],'isocountrycode']]
      Type: String
      Value: !Ref ISOCountryCode


  SetDispositionCode:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-setDisposition/
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          DIALING_LIST: !Ref dialList
          RESULTS_FIREHOSE_NAME: !Ref ResultsFirehose



  SaveResults:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-SaveResults/
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Timeout: 600
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          DIALER_DEPLOYMENT: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          ACTIVE_DIALING: !Ref ActiveDialing
          RESULTS_BUCKET: !Ref resultsbucket

  ProcessContactEvents:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !GetAtt PowerDialerLambdaRole.Arn
      CodeUri: PowerDialer-ProcessContactEvents/
      Handler: lambda_function.lambda_handler
      MemorySize: 512
      Timeout: 600
      Layers:
        - !Ref PowerDialer
      Environment: 
        Variables:
          ACTIVE_DIALING: !Ref ActiveDialing
  
  ContactEventsRule:
    Type: AWS::Events::Rule
    Properties: 
      Description: Amazon Connect contact disconnection events monitor 
      EventPattern: {"source": ["aws.connect"],"detail-type": ["Amazon Connect Contact Event"],"detail": {"eventType": ["DISCONNECTED"]}}
      Name: !Join ['-', ['connect-events', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]
      State: ENABLED
      Targets: 
        - 
          Arn: !GetAtt ProcessContactEvents.Arn
          Id: 'ConnectContactDisconnects'
  
  EventBridgeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ProcessContactEvents.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ContactEventsRule.Arn

  CampaignLaunchSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Initiate dialer campaign"
      ScheduleExpression: 'cron(0 14 ? * MON-SUN *)'
      State: 'DISABLED'
      Targets:
        -
          Id: "CampaignStarter"
          RoleArn: !GetAtt CampaignLauncherRole.Arn
          Arn: !GetAtt DialerControlSF.Arn

Outputs:
  InputBucket:
    Description: "Bucket for List Loading and Results generation"
    Value: !Ref dialinglistbucket 
  ConnectConfigConnectId:
    Description: "Connect - Instance Id parameter"
    Value: !Ref parameterConnectId
  ConnectConfigQueue:
    Description: "Connect - Queue parameter"
    Value: !Ref parameterQueue 
  ConnectConfigContactFlow:
    Description: "Connect - ContactFlow Id parameter"
    Value: !Ref parameterContactFlow
